name: &name "ClusterDiarizer"

num_workers: 1
sample_rate: 16000
batch_size: 8
device: null # can specify a specific device, i.e: cuda:1 (default cuda if cuda available, else cpu)
verbose: True # enable additional logging

diarizer:
  manifest_filepath: "./manifest.json" # Update this with your manifest file path
  out_dir: "../outdir" # Update this with your desired output directory
  oracle_vad: False # If True, uses RTTM files provided in the manifest file to get speech activity (VAD) timestamps
  collar: 0.25 # Collar value for scoring
  ignore_overlap: True # Consider or ignore overlap segments while scoring

  vad:
    model_path: vad_multilingual_marblenet # .nemo local model path or pretrained VAD model name
    external_vad_manifest: null # This option is provided to use external vad and provide its speech activity labels for speaker embeddings extraction. Only one of model_path or external_vad_manifest should be set

    parameters: # Tuned by detection error rate (false alarm + miss) on multilingual ASR evaluation datasets
      window_length_in_sec: 0.63 # Window length in sec for VAD context input
      shift_length_in_sec: 0.08 # Shift length in sec for generate frame level VAD prediction
      smoothing: False # False or type of smoothing method (eg: median)
      overlap: 0.5 # Overlap ratio for overlapped mean/median smoothing filter
      onset: 0.5 # Onset threshold for detecting the beginning and end of a speech
      offset: 0.3 # Offset threshold for detecting the end of a speech
      pad_onset: 0.2 # Adding durations before each speech segment
      pad_offset: 0.2 # Adding durations after each speech segment
      min_duration_on: 0.5 # Threshold for small non_speech deletion
      min_duration_off: 0.5 # Threshold for short speech segment deletion
      filter_speech_first: True

  speaker_embeddings:
    model_path: titanet_large # .nemo local model path or pretrained model name (titanet_large, ecapa_tdnn or speakerverification_speakernet)
    parameters:
      window_length_in_sec: [1.9, 1.2, 0.5] # Window length(s) in sec (floating-point number). either a number or a list. ex) 1.5 or [1.5,1.0,0.5]
      shift_length_in_sec: [0.95, 0.6, 0.25] # Shift length(s) in sec (floating-point number). either a number or a list. ex) 0.75 or [0.75,0.5,0.25]
      multiscale_weights: [1, 1, 1] # Weight for each scale. should be null (for single scale) or a list matched with window/shift scale count. ex) [0.33,0.33,0.33]
      save_embeddings: True # If True, save speaker embeddings in pickle format. This should be True if clustering result is used for other models, such as `msdd_model`.

  clustering:
    parameters:
      oracle_num_speakers: False # If True, use num of speakers value provided in manifest file.
      max_num_speakers: 8 # Max number of speakers for each recording. If an oracle number of speakers is passed, this value is ignored.
      enhanced_count_thres: 80 # If the number of segments is lower than this number, enhanced speaker counting is activated.
      max_rp_threshold: 0.25 # Determines the range of p-value search: 0 < p <= max_rp_threshold.
      sparse_search_volume: 10 # The higher the number, the more values will be examined with more time.
      maj_vote_spk_count: False # If True, take a majority vote on multiple p-values to estimate the number of speakers.
      chunk_cluster_count: 50 # Number of forced clusters (overclustering) per unit chunk in long-form audio clustering.
      embeddings_per_chunk: 10000 # Number of embeddings in each chunk for long-form audio clustering. Adjust based on GPU memory capacity. (default: 10000, approximately 40 mins of audio)

  msdd_model:
    model_path: "diar_msdd_general" # Update this with your MSDD pretrained model path
    parameters:
      use_speaker_model_from_ckpt: True # If True, use speaker embedding model in checkpoint. If False, the provided speaker embedding model in config will be used.
      infer_batch_size: 8 # Batch size for MSDD inference.
      sigmoid_threshold: [0.7] # Sigmoid threshold for generating binarized speaker labels. The smaller the more generous on detecting overlaps.
      seq_eval_mode: False # If True, use oracle number of speaker and evaluate F1 score for the given speaker sequences. Default is False.
      split_infer: True # If True, break the input audio clip to short sequences and calculate cluster average embeddings for inference.
      diar_window_length: 50 # The length of split short sequence when split_infer is True.
      overlap_infer_spk_limit: 5 # If the estimated number of speakers are larger than this number, overlap speech is not estimated.

  asr:
    model_path: "../quartznet-CTC-Char-Small.nemo" # Path to your trained .nemo model
    parameters:
      asr_based_vad: False # If you want to use ASR for VAD
      asr_based_vad_threshold: 1.0
      asr_batch_size: 1 # Adjust based on your hardware capabilities
      decoder_delay_in_sec: null
      word_ts_anchor_offset: null
      word_ts_anchor_pos: "start"
      fix_word_ts_with_VAD: False
      colored_text: False
      print_time: True
      break_lines: False

    ctc_decoder_parameters:
      pretrained_language_model: null
      beam_width: 32
      alpha: 0.5
      beta: 2.5

    realigning_lm_parameters:
      arpa_language_model: null
      min_number_of_words: 3
      max_number_of_words: 10
      logprob_diff_threshold: 1.2
